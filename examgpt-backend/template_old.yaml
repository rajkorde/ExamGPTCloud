AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  examgpt-backend

  Backend for examgpt. 
  * API gateway, Lambda and S3 used for uploading study material
  * DynamoDB, Lambda, SNS used for storing examgpt data
  * API Gateway, Lambda used for for telegram bot

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.12
    Architectures:
      - x86_64

Resources:
  # S3 Buckets
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}-bucket"

  # SNS Topics

  # Rest APIs
  UploadRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  # Lambda Functions
  UploadHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: examgpt_backend/
      Handler: upload.handler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ContentBucket
      Environment:
        Variables:
          CONTENT_BUCKET: !Ref ContentBucket
      Events:
        APIEvent:
          Type: Api
          Properties:
            Path: /upload
            Method: POST
            RestApiId: !Ref UploadRestApi

  ChunkingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: examgpt_backend/
      Handler: chunker.handler
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref ContentBucket
            Events:
              - s3:ObjectCreated:*

  # Connectors
  ChunkingLambdaContentBucketConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: ChunkingFunction
      Destination:
        Id: ContentBucket
      Permissions:
        - Read

Outputs:
  UploadRestApi:
    Description: "API Gateway endpoint for uploading files"
    Value: !Sub "https://${UploadRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/upload/"
  ChunkingFunction:
    Description: "Function that chunks uploaded file"
    Value: !GetAtt ChunkingFunction.Arn
  ChunkingFunctionIamRole:
    Description: "Implicit IAM Role created for ChunkingFunction"
    Value: !GetAtt ChunkingFunctionRole.Arn
  S3Bucket:
    Description: "Bucket where uploaded files are stored"
    Value: !GetAtt ContentBucket.Arn
